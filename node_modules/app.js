var express = require('express');
var bodyParser = require('body-parser');
GLOBAL._ = require('underscore');
var fs= require('fs');
var bcrypt = require('bcryptjs');
var app = express();
var MongoClient=require('mongodb').MongoClient;
var url="mongodb://localhost:27017/socialNetwork";
MongoClient.connect(url, function(err, db){
    GLOBAL.DB=db;
    app.listen(100);
})


app.use(function(req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');
    if('OPTIONS'==req.method) {
        res.send(200);
    }
    else {
        next();
    }
});

app.use(express.static('public'));

app.use(bodyParser.json())

app.use(function (req, res, next) {
    console.log(req.originalUrl)
    if(req.originalUrl =='/register'){
        next(null);
        return;
    }
    if (!req.headers['authorization'] && req.originalUrl!="") {
        res.status(401).send({message: "No auth"});
        return;
    }
    var parts = req.headers['authorization'].split(":")
    var nick = parts[0];
    var pwd = parts[1];
    DB.collection('users').findOne({nick:nick}, function(err,user) {
        if (user && bcrypt.compareSync(pwd, user.pwd)) {
            req.currentUser = user;
            next(null);
            return;
        }
        res.status(401).send({message: "invalid user or password"})      
    })
})
require('./controllers/user')(app)
require('./controllers/post')(app)
