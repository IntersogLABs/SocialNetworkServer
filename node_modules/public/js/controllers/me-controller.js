define([
  'controllers/base/controller',
  'models/me/me-model',
  'models/posts/post-collection',
  'models/follow/followers-collection',
  'models/follow/following-collection',
  'views/me/me-change-view',
  'views/me/me-show-view',
  'views/me/me-show-sidebar',
  'views/posts/post-collection-view',
  'views/follow/following-collection-view',
  'views/follow/followers-collection-view'
], function(Controller, MeModel, PostCollection, FollowersCollection, FollowingCollection, 
    MeChangeView, MeShowView, MeShowSidebar, PostCollectionView, FollowingCollectionView,  
    FollowersCollectionView) {
  'use strict';

  var MeController = Controller.extend({
    initialize: function(){

    },

    change: function() {
      this.model= new MeModel();
      this.model1=new MeModel({change:true});

      this.view = new MeChangeView ({
        model: this.model,
        region:'content'
      });

      this.viewSidebar = new MeShowSidebar ({
        model: this.model1,
        region:'sidebar'
      })

      this.model.fetch().then(function(){ this.view.render() }.bind(this))
    },

    show: function() {

      this.model1=new MeModel();
      this.model2=new MeModel({show:true});

      this.viewSidebar = new MeShowSidebar ({
            model: this.model2,
            region:'sidebar'
      })

      this.view = new MeShowView ({
        model: this.model1,
        region:'content'
      });

      this.collection=new PostCollection();

      this.viewPosts= new PostCollectionView({
        collection:this.collection,
        region:"content"
      })

      this.model1.fetch().then(function() { this.view.render() }.bind(this));
      this.collection.fetch().then(function(){ this.viewPosts.render() }.bind(this));
    },

    followers: function() {
      this.model=new MeModel({followers:true});

      this.viewSidebar = new MeShowSidebar ({
        model: this.model,
        region:'sidebar'
      });

      this.collection=new FollowersCollection();

      this.viewFollowers= new FollowersCollectionView({
        collection:this.collection,
        region:"content"
      });

      this.collection.fetch().then(function(){ this.viewFollowers.render() }.bind(this));
    },

    following: function() {
      this.model=new MeModel({following:true});

      this.viewSidebar = new MeShowSidebar ({
        model: this.model,
        region:'sidebar'
      })

      this.collection=new FollowingCollection();

      this.viewFollowing= new FollowingCollectionView({
        collection:this.collection,
        region:"content"
      })

      this.collection.fetch().then(function(){ this.viewFollowing.render() }.bind(this));
    }
  });
  return MeController;
})